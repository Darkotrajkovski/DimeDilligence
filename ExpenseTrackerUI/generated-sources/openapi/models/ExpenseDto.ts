/* tslint:disable */
/* eslint-disable */
/**
 * Financial API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExpenseCategoryDto } from './ExpenseCategoryDto';
import {
    ExpenseCategoryDtoFromJSON,
    ExpenseCategoryDtoFromJSONTyped,
    ExpenseCategoryDtoToJSON,
} from './ExpenseCategoryDto';

/**
 * 
 * @export
 * @interface ExpenseDto
 */
export interface ExpenseDto {
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    ownerId?: number;
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    currency?: string;
    /**
     * 
     * @type {Date}
     * @memberof ExpenseDto
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    place?: string;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    comment?: string;
    /**
     * 
     * @type {ExpenseCategoryDto}
     * @memberof ExpenseDto
     */
    category?: ExpenseCategoryDto;
}

/**
 * Check if a given object implements the ExpenseDto interface.
 */
export function instanceOfExpenseDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExpenseDtoFromJSON(json: any): ExpenseDto {
    return ExpenseDtoFromJSONTyped(json, false);
}

export function ExpenseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpenseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'place': !exists(json, 'place') ? undefined : json['place'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'category': !exists(json, 'category') ? undefined : ExpenseCategoryDtoFromJSON(json['category']),
    };
}

export function ExpenseDtoToJSON(value?: ExpenseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ownerId': value.ownerId,
        'amount': value.amount,
        'currency': value.currency,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substring(0,10)),
        'description': value.description,
        'place': value.place,
        'comment': value.comment,
        'category': ExpenseCategoryDtoToJSON(value.category),
    };
}

